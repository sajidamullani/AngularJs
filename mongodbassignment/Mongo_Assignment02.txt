Assignment 2:
=============================================

1) List the emps who are working under ‘MGR’
db.emp.find({​​​​​​​
   "$and": [{​​​​​​​
   "job<":{​​​​​​​ "$gt" : 'manager'  }​​​​​​​
 }​​​​​​​,{​​​​​​​ " job<":{​​​​​​​ "$gt" : 'president' }​​​​​​​
   }​​​​​​​]
}​​​​​​​);


2) List the emps who joined in any year but not belongs to the month of March
db.emp.find({​​​​​​​
 "month(hiredate)<":{​​​​​​​ "$gt" : '03' }​​​​​​​
}​​​​​​​);


3) List all the Clerks of Deptno 20
db.emp.find({​​​​​​​
   "$and": [{​​​​​​​
   "job" : 'clerk' 
 }​​​​​​​,{​​​​​​​ " deptno" : 20
   }​​​​​​​]
}​​​​​​​);


4) List the emps of Deptno 30 or 10 joined in the year 1981
db.emp.find({​​​​​​​
   "$or": [{​​​​​​​
    "deptno " :  30 
 }​​​​​​​,{​​​​​​​
   "$and": [{​​​​​​​
   "deptno" : 20 
 }​​​​​​​,{​​​​​​​ " month(hiredate)" : '1981'
   }​​​​​​​]
   }​​​​​​​]
}​​​​​​​);



5) Display the details of SMITH
db.emp.find({​​​​​​​
 "ename" : 'smith'
}​​​​​​​);

    

6) LIST EMP WHO ARE WORKING AS MANAGER OR ANALYST OR CLERK
db.EMP.find({​​​​​​​
 "JOB": {​​​​​​​"$in": ['MANAGER','ANALYST','CLERK'}​​​​​​​
}​​​​​​​);


7)LIST EMP WHO ARE EARNING SAL BETWEEN 3000 AND 5000 (INCLUSIVE OF LIMIT)




8) LIST EMP WHO ARE WORKING AS MANAGER OR ANALYST OR CLERK AND EARNING SAL BETWEEN 3000 AND 5000
db.emp.find({​​​​​​​
   "$and": [{​​​​​​​
   "job": {​​​​​​​"$in": ['MANAGER','ANALYST','CLERK'] }​​​​​​​
 }​​​​​​​,{​​​​​​​
   "$and": [{​​​​​​​
   
 }​​​​​​​,{​​​​​​​ 
   }​​​​​​​]
   }​​​​​​​]
}​​​​​​​);

9) LIST ALL EMP WHE ARE EARNING COMM
db.emp.find({​​​​​​​
 "comm":{​​​​​​​ "$gt" : 0 }​​​​​​​
}​​​​​​​);


10) LIST ALL EMP WHOSE COMM IS NOT NULL
db.emp.find({​​​​​​​
 "comm ":{​​​​​​​ "$gte" :  0 }​​​​​​​
}​​​​​​​);


11) LIST ALL EMP WHOSE NAME STARTS WITH S
db.EMP.find({​​​​​​​
 "ename " :  'S%'
}​​​​​​​);


12) LIST ALL EMP WHOSE NAME ENDS WITH R
db.EMP.find({​​​​​​​
 "ename " :  '%R'
}​​​​​​​);


13) LIST ALL EMP WHOSE NAME CONTAINS A
db.EMP.find({​​​​​​​
 "ename " :  '%A%'
}​​​​​​​);


14) LIST ALL EMP WHOSE NAME CONTAINS A AS SECOND LETTER
db.EMP.find({​​​​​​​
 "ename " :  '_A%'
}​​​​​​​);


15) LIST ALL EMP WHOSE NAME STARTS WITH EITHER M OR S
db.EMP.find({​​​​​​​
   "$or": [{​​​​​​​
    "ename " :  'M%%' 
 }​​​​​​​,{​​​​​​​ "ename " :  'S%'
   }​​​​​​​]
}​​​​​​​);


16) LIST ALL EMP WHOSE NAME STARTS BETWEEN A TO M



17) LIST ALL EMP WHOSE NAME CONTAINS _
db.EMP.find({​​​​​​​
 "ename " :  '%\_%' 
}​​​​​​​);


18) LIST ALL EMP WHO ARE WORKING AS MANAGER IN EITHER DEPT 10 OR 20 AND ALL CLERK FOR DEPT3 30
db.emp.find({​​​​​​​
   "$or": [{​​​​​​​
    "mgr in (select deptno from emp where deptno" : 10 
 }​​​​​​​,{​​​​​​​
   "$or": [{​​​​​​​
    "deptno" : 20) 
 }​​​​​​​,{​​​​​​​
   "$and": [{​​​​​​​
   "job" : 'clerk' 
 }​​​​​​​,{​​​​​​​ " deptno" : 30
   }​​​​​​​]
   }​​​​​​​]
   }​​​​​​​]
}​​​​​​​);




db.emp.find({​​​​​​​


   "$and": [{​​​​​​​
   "job" : 'manager'  
    }​​​​​​​,{​​​​​​​
   "$or": [{​​​​​​​
    "deptno" : 10 
 }​​​​​​​,{​​​​​​​
   "$or": [{​​​​​​​
    "deptno" : 20)) 
 }​​​​​​​,{​​​​​​​
   "$and": [{​​​​​​​
   "job" : 'clerk' 
 }​​​​​​​,{​​​​​​​ " deptno" : 30
   }​​​​​​​]
   }​​​​​​​]
   }​​​​​​​]
   }​​​​​​​]
}​​​​​​​);


19) LIST ENAME, SAL AND BONUS AS 10% OF SALARY
db.emp.find({​​​​​​}​​​​​​​,{​​​​​​​
   "ename": 1,
   "sal": 1,
   "0.01*salasBONUS": 1
}​​​​​​​
);


20) LIST EMP DATA AS PER THE ASCENDING ORDER OF NAME
db.emporder by ename.find({​​​​​​​}​​​​​​​).sort({​​​​​​​
 "ename": 1
}​​​​​​​);


21) LIST ALL AS PER THEIR SALARY HIGHES TO LOWEST
db.emporder by sal desc.find({​​​​​​​
}​​​​​​​).sort({​​​​​​​
 "sal": -1
}​​​​​​​);


22) LIST EMP AS PER THEIR DEPT, WITH IN DEPT HIGHEST TO LOWESET SAL
db.emporder by deptno desc.find({​​​​​​​}​​​​​​​).sort({​​​​​​​
 "deptno": -1
}​​​​​​​);


23) LIST TOTAL ORGANIZATION SALARY
db.emp.find({​​​​​​​
 
}​​​​​​​,{​​​​​​​
   "sum(sal)asTotal_organisation_salary": 1
}​​​​​​​
);


24) LIST DEPTWISE TOTAL SALARY
db..group({​​​​​​​
   "key":{​​​​​​​
         "deptno": true
   }​​​​​​​,
   "initial": {​​​​​​​
         "sumsalasDepartment_sal ": 0
   }​​​​​​​,
   "reduce": function( obj , prev ){​​​​​​​
         prev.sumsalas Department_sal  = prev.sumsalas Department_sal  + obj.salas Department_sal  - 0;
   }​​​​​​​,
   "finalize": function( prev ){​​​​​​​


   }​​​​​​​,
   "cond": {​​​​​​​
 
   }​​​​​​​


}​​​​​​​);



25) LIST ALL EMP WHO HAVE JOINED IN MONTH OF FEB
db.emp.find({​​​​​​​
 "month(hiredate)" : '02'
}​​​​​​​);


26) LIST EMP COUNT JOINED BETWEEN 1981 AND 1983
db.emp.find({​​​​​​​
   "$and": [{​​​​​​​
   "year(hiredate)":{​​​​​​​ "$gt" : '1981'  }​​​​​​​
 }​​​​​​​,{​​​​​​​ " Year(hiredate)":{​​​​​​​ "$lt" : '1983' }​​​​​​​
   }​​​​​​​]
}​​​​​​​,{​​​​​​​
   "count(empno)": 1
}​​​​​​​
);


27) LIST HOW MANY YEARS OF SERVICE COMPLETED BY EACH EMP ARRANGE BASED ON TENURE HIGHEST TO LOWEST


db.emporder by tenure desc.find({​​​​​​​
 
}​​​​​​​,{​​​​​​​
   "*": 1,
   "YEAR(CURDATE())-YEAR(hiredate)ASTENURE": 1
}​​​​​​​
).sort({​​​​​​​
  "tenure": -1
}​​​​​​​);